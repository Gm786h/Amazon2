@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/
@layer base {
  :root {
    --background: 0 0% 5%;
    --foreground: 40 20% 95%;
    --card: 0 0% 8%;
    --card-foreground: 40 20% 95%;
    --popover: 0 0% 8%;
    --popover-foreground: 40 20% 95%;
    --primary: 30 40% 35%;
    --primary-foreground: 40 20% 95%;
    --secondary: 25 50% 25%;
    --secondary-foreground: 40 20% 95%;
    --muted: 0 0% 15%;
    --muted-foreground: 40 15% 70%;
    --accent: 0 0% 15%;
    --accent-foreground: 40 20% 95%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 40 20% 95%;
    --border: 0 0% 15%;
    --input: 0 0% 15%;
    --ring: 30 40% 35%;
    --radius: 0.5rem;
  }
  
  * {
    @apply border-border;
  }
  
  body {
    @apply bg-background text-foreground;
  }
}

/* Custom animations */
@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-20px); }
}

@keyframes glow {
  0%, 100% { box-shadow: 0 0 20px hsla(30, 40%, 35%, 0.3); }
  50% { box-shadow: 0 0 40px hsla(30, 40%, 35%, 0.6); }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@layer components {
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  .animate-glow {
    animation: glow 2s ease-in-out infinite;
  }
  
  .animate-fadeInUp {
    animation: fadeInUp 0.8s ease-out forwards;
  }
  
  .gradient-text {
    background: linear-gradient(135deg, hsl(30, 40%, 45%) 0%, hsl(25, 50%, 35%) 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }
  
  .glass-effect {
    background: rgba(255, 255, 255, 0.05);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.1);
  }
}

@layer utilities {
  .bg-background {
    background-color: hsl(var(--background));
  }
  
  .text-foreground {
    color: hsl(var(--foreground));
  }
  
  .bg-card {
    background-color: hsl(var(--card));
  }
  
  .text-card-foreground {
    color: hsl(var(--card-foreground));
  }
  
  .bg-popover {
    background-color: hsl(var(--popover));
  }
  
  .text-popover-foreground {
    color: hsl(var(--popover-foreground));
  }
  
  .bg-primary {
    background-color: hsl(var(--primary));
  }
  
  .text-primary-foreground {
    color: hsl(var(--primary-foreground));
  }
  
  .bg-secondary {
    background-color: hsl(var(--secondary));
  }
  
  .text-secondary-foreground {
    color: hsl(var(--secondary-foreground));
  }
  
  .bg-muted {
    background-color: hsl(var(--muted));
  }
  
  .text-muted-foreground {
    color: hsl(var(--muted-foreground));
  }
  
  .bg-accent {
    background-color: hsl(var(--accent));
  }
  
  .text-accent-foreground {
    color: hsl(var(--accent-foreground));
  }
  
  .bg-destructive {
    background-color: hsl(var(--destructive));
  }
  
  .text-destructive-foreground {
    color: hsl(var(--destructive-foreground));
  }
  
  .border-border {
    border-color: hsl(var(--border));
  }
  
  .border-input {
    border-color: hsl(var(--input));
  }
  
  .ring-ring {
    --tw-ring-color: hsl(var(--ring));
  }
  
  /* Additional utility classes for comprehensive coverage */
  .bg-input {
    background-color: hsl(var(--input));
  }
  
  .text-input {
    color: hsl(var(--input));
  }
  
  .text-border {
    color: hsl(var(--border));
  }
  
  .text-ring {
    color: hsl(var(--ring));
  }
  
  .bg-ring {
    background-color: hsl(var(--ring));
  }
  
  .shadow-ring {
    box-shadow: 0 0 0 3px hsl(var(--ring) / 0.2);
  }
  
  /* Focus utilities */
  .focus\:ring-ring:focus {
    --tw-ring-color: hsl(var(--ring));
  }
  
  .focus\:border-ring:focus {
    border-color: hsl(var(--ring));
  }
  
  /* Hover utilities */
  .hover\:bg-primary\/90:hover {
    background-color: hsl(var(--primary) / 0.9);
  }
  
  .hover\:bg-secondary\/80:hover {
    background-color: hsl(var(--secondary) / 0.8);
  }
  
  .hover\:bg-muted\/50:hover {
    background-color: hsl(var(--muted) / 0.5);
  }
  
  .hover\:bg-accent\/50:hover {
    background-color: hsl(var(--accent) / 0.5);
  }
  
  .hover\:bg-destructive\/90:hover {
    background-color: hsl(var(--destructive) / 0.9);
  }
  
  /* Active utilities */
  .active\:bg-primary\/95:active {
    background-color: hsl(var(--primary) / 0.95);
  }
  
  .active\:bg-secondary\/95:active {
    background-color: hsl(var(--secondary) / 0.95);
  }
  
  /* Disabled utilities */
  .disabled\:opacity-50:disabled {
    opacity: 0.5;
  }
  
  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }
  
  /* Data state utilities */
  .data-\[state\=open\]\:bg-accent[data-state="open"] {
    background-color: hsl(var(--accent));
  }
  
  .data-\[state\=selected\]\:bg-muted[data-state="selected"] {
    background-color: hsl(var(--muted));
  }
  
  /* Group utilities */
  .group-hover\:bg-accent\/50:hover {
    background-color: hsl(var(--accent) / 0.5);
  }
  
  .group-focus\:ring-ring:focus {
    --tw-ring-color: hsl(var(--ring));
  }
}

